{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0x2bdCC0de6bE1f7D2ee689a0342D76F52E8EFABa3",
      "txHash": "0xfd1047e2ac7ec598b265f61bf163f582131da7bf7a4cb1bd36e7f44f0dfde64d",
      "kind": "uups"
    },
    {
      "address": "0xFD471836031dc5108809D173A067e8486B9047A3",
      "txHash": "0x94dad69d0aacf89e910649c73b57642f03e76f7b33e7f3f6c561495df1ee3df0",
      "kind": "uups"
    },
    {
      "address": "0xa82fF9aFd8f496c3d6ac40E2a0F282E47488CFc9",
      "txHash": "0x384951ad606d163723a5d7ce67b0277c7d4e12b9eac552d08c115c0fd7e142f2",
      "kind": "uups"
    },
    {
      "address": "0x2279B7A0a67DB372996a5FaB50D91eAA73d2eBe6",
      "txHash": "0xfda83ba317ccf9fde29e8520d553534118484bc90bf0a6a235599fc029f72567",
      "kind": "uups"
    },
    {
      "address": "0x9A676e781A523b5d0C0e43731313A708CB607508",
      "txHash": "0xa78e261d686c94d26a1b1ba386f4bae677c9adfcb48d400d2529ad015b68620b",
      "kind": "uups"
    },
    {
      "address": "0x59b670e9fA9D0A427751Af201D676719a970857b",
      "txHash": "0x98ee0fae8160f16b224f5a0b54b9de403352e21d5a3bec70c6b8742faff6463b",
      "kind": "uups"
    },
    {
      "address": "0x9fE46736679d2D9a65F0992F2272dE9f3c7fa6e0",
      "txHash": "0x05cc0c1381dc914231dbbb6ae71b888acf2d9bb07a788d2da8bbb56e47ff914d",
      "kind": "uups"
    },
    {
      "address": "0x99bbA657f2BbC93c02D617f8bA121cB8Fc104Acf",
      "txHash": "0xb0ad28c38e2c101f8ffa334fe9c04cc8be3bbf59a0646c01e6fe8ae5b779d72f",
      "kind": "uups"
    },
    {
      "address": "0x1291Be112d480055DaFd8a610b7d1e203891C274",
      "txHash": "0x014c3f84bfe80219286a5fc0605ed2f688c9be739485640f207d5a67eda951d6",
      "kind": "uups"
    },
    {
      "address": "0x4b6aB5F819A515382B0dEB6935D793817bB4af28",
      "txHash": "0xe92bdfd2609410d0270fec9282c177b6f2c3b24ce14e25934663907d017955b0",
      "kind": "uups"
    }
  ],
  "impls": {
    "dc9dbedc0537bcfe624bc3b5ef6ee5bc0727b997eb6bba3d520062fd360d35e0": {
      "address": "0x4c5859f0F772848b2D91F1D83E2Fe57935348029",
      "txHash": "0x981563aeefe84521fd1508537089671c120961d7dd37f511724da818f4e01a08",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:418"
          },
          {
            "contract": "ERC721TradableUpgradeable",
            "label": "proxyRegistryAddress",
            "type": "t_address",
            "src": "contracts/ERC721TradableUpgradeable.sol:14"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ERC721BurnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:34"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:27"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:30"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:33"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:171"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:23"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:75"
          },
          {
            "contract": "MeemProps",
            "label": "_nonOwnerSplitAllocationAmount",
            "type": "t_uint256",
            "src": "contracts/MeemProps.sol:19"
          },
          {
            "contract": "MeemProps",
            "label": "_chain",
            "type": "t_mapping(t_uint256,t_enum(Chain)5434)",
            "src": "contracts/MeemProps.sol:20"
          },
          {
            "contract": "MeemProps",
            "label": "_parent",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts/MeemProps.sol:21"
          },
          {
            "contract": "MeemProps",
            "label": "_parentTokenId",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/MeemProps.sol:22"
          },
          {
            "contract": "MeemProps",
            "label": "_properties",
            "type": "t_mapping(t_uint256,t_struct(MeemProperties)5493_storage)",
            "src": "contracts/MeemProps.sol:23"
          },
          {
            "contract": "MeemProps",
            "label": "_childProperties",
            "type": "t_mapping(t_uint256,t_struct(MeemProperties)5493_storage)",
            "src": "contracts/MeemProps.sol:24"
          },
          {
            "contract": "Meem",
            "label": "_tokenIdCounter",
            "type": "t_struct(Counter)3123_storage",
            "src": "contracts/Meem.sol:41"
          },
          {
            "contract": "Meem",
            "label": "_tokenURIContractAddress",
            "type": "t_address",
            "src": "contracts/Meem.sol:43"
          },
          {
            "contract": "Meem",
            "label": "_contractURI",
            "type": "t_string_storage",
            "src": "contracts/Meem.sol:44"
          },
          {
            "contract": "Meem",
            "label": "_copyDepth",
            "type": "t_uint256",
            "src": "contracts/Meem.sol:45"
          },
          {
            "contract": "Meem",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts/Meem.sol:46"
          },
          {
            "contract": "Meem",
            "label": "_children",
            "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
            "src": "contracts/Meem.sol:47"
          }
        ],
        "types": {
          "t_struct(Counter)3123_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(uint256 => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_enum(Chain)5434)": {
            "label": "mapping(uint256 => enum Chain)"
          },
          "t_enum(Chain)5434": {
            "label": "enum Chain",
            "members": [
              "Ethereum",
              "Polygon",
              "Cardano"
            ]
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_struct(MeemProperties)5493_storage)": {
            "label": "mapping(uint256 => struct MeemProperties)"
          },
          "t_struct(MeemProperties)5493_storage": {
            "label": "struct MeemProperties",
            "members": [
              {
                "label": "copyPermissions",
                "type": "t_array(t_struct(MeemPermission)5464_storage)dyn_storage"
              },
              {
                "label": "remixPermissions",
                "type": "t_array(t_struct(MeemPermission)5464_storage)dyn_storage"
              },
              {
                "label": "readPermissions",
                "type": "t_array(t_struct(MeemPermission)5464_storage)dyn_storage"
              },
              {
                "label": "copyPermissionsLockedBy",
                "type": "t_address"
              },
              {
                "label": "remixPermissionsLockedBy",
                "type": "t_address"
              },
              {
                "label": "readPermissionsLockedBy",
                "type": "t_address"
              },
              {
                "label": "splits",
                "type": "t_array(t_struct(Split)5453_storage)dyn_storage"
              },
              {
                "label": "splitsLockedBy",
                "type": "t_address"
              },
              {
                "label": "totalCopies",
                "type": "t_uint256"
              },
              {
                "label": "totalCopiesLockedBy",
                "type": "t_address"
              }
            ]
          },
          "t_array(t_struct(MeemPermission)5464_storage)dyn_storage": {
            "label": "struct MeemPermission[]"
          },
          "t_struct(MeemPermission)5464_storage": {
            "label": "struct MeemPermission",
            "members": [
              {
                "label": "permission",
                "type": "t_enum(Permission)5443"
              },
              {
                "label": "addresses",
                "type": "t_array(t_address)dyn_storage"
              },
              {
                "label": "numTokens",
                "type": "t_uint256"
              },
              {
                "label": "lockedBy",
                "type": "t_address"
              }
            ]
          },
          "t_array(t_struct(Split)5453_storage)dyn_storage": {
            "label": "struct Split[]"
          },
          "t_struct(Split)5453_storage": {
            "label": "struct Split",
            "members": [
              {
                "label": "toAddress",
                "type": "t_address"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "lockedBy",
                "type": "t_address"
              }
            ]
          },
          "t_enum(Permission)5443": {
            "label": "enum Permission",
            "members": [
              "Owner",
              "Anyone",
              "Addresses",
              "Holders"
            ]
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          }
        }
      }
    },
    "91df9430eee2adaf1dd47fc08292e737b588d10b320ad9c4678b1ae97b7f5147": {
      "address": "0x82e01223d51Eb87e16A03E24687EDF0F294da6f1",
      "txHash": "0x51d85a1fb9a787e89d6af7f0d0c368faa8841468e6ef4ea08bdc186f4bf64f4b",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:418"
          },
          {
            "contract": "ERC721TradableUpgradeable",
            "label": "proxyRegistryAddress",
            "type": "t_address",
            "src": "contracts/ERC721TradableUpgradeable.sol:14"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ERC721BurnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:34"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:27"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:30"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:33"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:171"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:23"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:75"
          },
          {
            "contract": "MeemProps",
            "label": "_nonOwnerSplitAllocationAmount",
            "type": "t_uint256",
            "src": "contracts/MeemProps.sol:19"
          },
          {
            "contract": "MeemProps",
            "label": "_chain",
            "type": "t_mapping(t_uint256,t_enum(Chain)5434)",
            "src": "contracts/MeemProps.sol:20"
          },
          {
            "contract": "MeemProps",
            "label": "_parent",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts/MeemProps.sol:21"
          },
          {
            "contract": "MeemProps",
            "label": "_parentTokenId",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/MeemProps.sol:22"
          },
          {
            "contract": "MeemProps",
            "label": "_properties",
            "type": "t_mapping(t_uint256,t_struct(MeemProperties)5493_storage)",
            "src": "contracts/MeemProps.sol:23"
          },
          {
            "contract": "MeemProps",
            "label": "_childProperties",
            "type": "t_mapping(t_uint256,t_struct(MeemProperties)5493_storage)",
            "src": "contracts/MeemProps.sol:24"
          },
          {
            "contract": "Meem",
            "label": "_tokenIdCounter",
            "type": "t_struct(Counter)3123_storage",
            "src": "contracts/Meem.sol:41"
          },
          {
            "contract": "Meem",
            "label": "_tokenURIContractAddress",
            "type": "t_address",
            "src": "contracts/Meem.sol:43"
          },
          {
            "contract": "Meem",
            "label": "_contractURI",
            "type": "t_string_storage",
            "src": "contracts/Meem.sol:44"
          },
          {
            "contract": "Meem",
            "label": "_copyDepth",
            "type": "t_uint256",
            "src": "contracts/Meem.sol:45"
          },
          {
            "contract": "Meem",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts/Meem.sol:46"
          },
          {
            "contract": "Meem",
            "label": "_children",
            "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
            "src": "contracts/Meem.sol:47"
          }
        ],
        "types": {
          "t_struct(Counter)3123_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(uint256 => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_enum(Chain)5434)": {
            "label": "mapping(uint256 => enum Chain)"
          },
          "t_enum(Chain)5434": {
            "label": "enum Chain",
            "members": [
              "Ethereum",
              "Polygon",
              "Cardano"
            ]
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_struct(MeemProperties)5493_storage)": {
            "label": "mapping(uint256 => struct MeemProperties)"
          },
          "t_struct(MeemProperties)5493_storage": {
            "label": "struct MeemProperties",
            "members": [
              {
                "label": "copyPermissions",
                "type": "t_array(t_struct(MeemPermission)5464_storage)dyn_storage"
              },
              {
                "label": "remixPermissions",
                "type": "t_array(t_struct(MeemPermission)5464_storage)dyn_storage"
              },
              {
                "label": "readPermissions",
                "type": "t_array(t_struct(MeemPermission)5464_storage)dyn_storage"
              },
              {
                "label": "copyPermissionsLockedBy",
                "type": "t_address"
              },
              {
                "label": "remixPermissionsLockedBy",
                "type": "t_address"
              },
              {
                "label": "readPermissionsLockedBy",
                "type": "t_address"
              },
              {
                "label": "splits",
                "type": "t_array(t_struct(Split)5453_storage)dyn_storage"
              },
              {
                "label": "splitsLockedBy",
                "type": "t_address"
              },
              {
                "label": "totalCopies",
                "type": "t_uint256"
              },
              {
                "label": "totalCopiesLockedBy",
                "type": "t_address"
              }
            ]
          },
          "t_array(t_struct(MeemPermission)5464_storage)dyn_storage": {
            "label": "struct MeemPermission[]"
          },
          "t_struct(MeemPermission)5464_storage": {
            "label": "struct MeemPermission",
            "members": [
              {
                "label": "permission",
                "type": "t_enum(Permission)5443"
              },
              {
                "label": "addresses",
                "type": "t_array(t_address)dyn_storage"
              },
              {
                "label": "numTokens",
                "type": "t_uint256"
              },
              {
                "label": "lockedBy",
                "type": "t_address"
              }
            ]
          },
          "t_array(t_struct(Split)5453_storage)dyn_storage": {
            "label": "struct Split[]"
          },
          "t_struct(Split)5453_storage": {
            "label": "struct Split",
            "members": [
              {
                "label": "toAddress",
                "type": "t_address"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "lockedBy",
                "type": "t_address"
              }
            ]
          },
          "t_enum(Permission)5443": {
            "label": "enum Permission",
            "members": [
              "Owner",
              "Anyone",
              "Addresses",
              "Holders"
            ]
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          }
        }
      }
    },
    "8c12cb3089720c6f30a6b2b631cb83bfec3b4925dc0691738f1ce7394c97d871": {
      "address": "0xc351628EB244ec633d5f21fBD6621e1a683B1181",
      "txHash": "0xc7a6c55ff60b4612603078180419479676febc1347e098e0562d148fcc6750a5",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:418"
          },
          {
            "contract": "ERC721TradableUpgradeable",
            "label": "proxyRegistryAddress",
            "type": "t_address",
            "src": "contracts/ERC721TradableUpgradeable.sol:14"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ERC721BurnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:34"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:27"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:30"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:33"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:171"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:23"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:75"
          },
          {
            "contract": "MeemProps",
            "label": "_nonOwnerSplitAllocationAmount",
            "type": "t_uint256",
            "src": "contracts/MeemProps.sol:19"
          },
          {
            "contract": "MeemProps",
            "label": "_chain",
            "type": "t_mapping(t_uint256,t_enum(Chain)5435)",
            "src": "contracts/MeemProps.sol:20"
          },
          {
            "contract": "MeemProps",
            "label": "_parent",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts/MeemProps.sol:21"
          },
          {
            "contract": "MeemProps",
            "label": "_parentTokenId",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/MeemProps.sol:22"
          },
          {
            "contract": "MeemProps",
            "label": "_properties",
            "type": "t_mapping(t_uint256,t_struct(MeemProperties)5494_storage)",
            "src": "contracts/MeemProps.sol:23"
          },
          {
            "contract": "MeemProps",
            "label": "_childProperties",
            "type": "t_mapping(t_uint256,t_struct(MeemProperties)5494_storage)",
            "src": "contracts/MeemProps.sol:24"
          },
          {
            "contract": "Meem",
            "label": "_tokenIdCounter",
            "type": "t_struct(Counter)3123_storage",
            "src": "contracts/Meem.sol:41"
          },
          {
            "contract": "Meem",
            "label": "_tokenURIContractAddress",
            "type": "t_address",
            "src": "contracts/Meem.sol:43"
          },
          {
            "contract": "Meem",
            "label": "_contractURI",
            "type": "t_string_storage",
            "src": "contracts/Meem.sol:44"
          },
          {
            "contract": "Meem",
            "label": "_copyDepth",
            "type": "t_uint256",
            "src": "contracts/Meem.sol:45"
          },
          {
            "contract": "Meem",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts/Meem.sol:46"
          },
          {
            "contract": "Meem",
            "label": "_children",
            "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
            "src": "contracts/Meem.sol:47"
          }
        ],
        "types": {
          "t_struct(Counter)3123_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(uint256 => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_enum(Chain)5435)": {
            "label": "mapping(uint256 => enum Chain)"
          },
          "t_enum(Chain)5435": {
            "label": "enum Chain",
            "members": [
              "Ethereum",
              "Polygon",
              "Cardano"
            ]
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_struct(MeemProperties)5494_storage)": {
            "label": "mapping(uint256 => struct MeemProperties)"
          },
          "t_struct(MeemProperties)5494_storage": {
            "label": "struct MeemProperties",
            "members": [
              {
                "label": "copyPermissions",
                "type": "t_array(t_struct(MeemPermission)5465_storage)dyn_storage"
              },
              {
                "label": "remixPermissions",
                "type": "t_array(t_struct(MeemPermission)5465_storage)dyn_storage"
              },
              {
                "label": "readPermissions",
                "type": "t_array(t_struct(MeemPermission)5465_storage)dyn_storage"
              },
              {
                "label": "copyPermissionsLockedBy",
                "type": "t_address"
              },
              {
                "label": "remixPermissionsLockedBy",
                "type": "t_address"
              },
              {
                "label": "readPermissionsLockedBy",
                "type": "t_address"
              },
              {
                "label": "splits",
                "type": "t_array(t_struct(Split)5454_storage)dyn_storage"
              },
              {
                "label": "splitsLockedBy",
                "type": "t_address"
              },
              {
                "label": "totalCopies",
                "type": "t_uint256"
              },
              {
                "label": "totalCopiesLockedBy",
                "type": "t_address"
              }
            ]
          },
          "t_array(t_struct(MeemPermission)5465_storage)dyn_storage": {
            "label": "struct MeemPermission[]"
          },
          "t_struct(MeemPermission)5465_storage": {
            "label": "struct MeemPermission",
            "members": [
              {
                "label": "permission",
                "type": "t_enum(Permission)5444"
              },
              {
                "label": "addresses",
                "type": "t_array(t_address)dyn_storage"
              },
              {
                "label": "numTokens",
                "type": "t_uint256"
              },
              {
                "label": "lockedBy",
                "type": "t_address"
              }
            ]
          },
          "t_array(t_struct(Split)5454_storage)dyn_storage": {
            "label": "struct Split[]"
          },
          "t_struct(Split)5454_storage": {
            "label": "struct Split",
            "members": [
              {
                "label": "toAddress",
                "type": "t_address"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "lockedBy",
                "type": "t_address"
              }
            ]
          },
          "t_enum(Permission)5444": {
            "label": "enum Permission",
            "members": [
              "Owner",
              "Anyone",
              "Addresses",
              "Holders"
            ]
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          }
        }
      }
    },
    "3351d454fc59d0acd6d86144c72fdc25e591ef099bcb23d87e1e4d7f619c7057": {
      "address": "0x9E545E3C0baAB3E08CdfD552C960A1050f373042",
      "txHash": "0xf7f0c710aabf1fcad37546b11f286df2def38bfd0046ab4b48f05d539a6a01ac",
      "layout": {
        "storage": [
          {
            "contract": "ERC721",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:23"
          },
          {
            "contract": "ERC721",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:26"
          },
          {
            "contract": "ERC721",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:29"
          },
          {
            "contract": "ERC721",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:32"
          },
          {
            "contract": "ERC721",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:35"
          },
          {
            "contract": "ERC721",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:38"
          },
          {
            "contract": "ERC721Enumerable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol:15"
          },
          {
            "contract": "ERC721Enumerable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol:18"
          },
          {
            "contract": "ERC721Enumerable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol:21"
          },
          {
            "contract": "ERC721Enumerable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol:24"
          },
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "EIP712Base",
            "label": "domainSeperator",
            "type": "t_bytes32",
            "src": "contracts/common/meta-transactions/EIP712Base.sol:24"
          },
          {
            "contract": "NativeMetaTransaction",
            "label": "nonces",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/common/meta-transactions/NativeMetaTransaction.sol:20"
          },
          {
            "contract": "Ownable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts/access/Ownable.sol:20"
          },
          {
            "contract": "ERC721Tradable",
            "label": "proxyRegistryAddress",
            "type": "t_address",
            "src": "contracts/common/ERC721Tradable.sol:32"
          },
          {
            "contract": "ERC721Tradable",
            "label": "_currentTokenId",
            "type": "t_uint256",
            "src": "contracts/common/ERC721Tradable.sol:33"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          }
        }
      }
    },
    "3e8656dc75fafd0d6d693500d300a1c3758c34180baeb59b0b9b1204f896eb0f": {
      "address": "0x4826533B4897376654Bb4d4AD88B7faFD0C98528",
      "txHash": "0xe0a8020d85919219dfb3ec756e1f86728a389d3f85c9a0e1cbe0daf858a46d00",
      "layout": {
        "storage": [
          {
            "contract": "ERC721",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:23"
          },
          {
            "contract": "ERC721",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:26"
          },
          {
            "contract": "ERC721",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:29"
          },
          {
            "contract": "ERC721",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:32"
          },
          {
            "contract": "ERC721",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:35"
          },
          {
            "contract": "ERC721",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:38"
          },
          {
            "contract": "ERC721Enumerable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol:15"
          },
          {
            "contract": "ERC721Enumerable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol:18"
          },
          {
            "contract": "ERC721Enumerable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol:21"
          },
          {
            "contract": "ERC721Enumerable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol:24"
          },
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "EIP712Base",
            "label": "domainSeperator",
            "type": "t_bytes32",
            "src": "contracts/common/meta-transactions/EIP712Base.sol:24"
          },
          {
            "contract": "NativeMetaTransaction",
            "label": "nonces",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/common/meta-transactions/NativeMetaTransaction.sol:20"
          },
          {
            "contract": "Ownable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts/access/Ownable.sol:20"
          },
          {
            "contract": "ERC721Tradable",
            "label": "proxyRegistryAddress",
            "type": "t_address",
            "src": "contracts/common/ERC721Tradable.sol:32"
          },
          {
            "contract": "ERC721Tradable",
            "label": "_currentTokenId",
            "type": "t_uint256",
            "src": "contracts/common/ERC721Tradable.sol:33"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          }
        }
      }
    },
    "8ee34c087df02ff25253e06ae1d483794f17b05b13ae80267060d4bc62227f8e": {
      "address": "0x18E317A7D70d8fBf8e6E893616b52390EbBdb629",
      "txHash": "0x9874ddf165f60939a97c63dcfdeac81238ac04331728032acc4385d95e3d4e1a",
      "layout": {
        "storage": [
          {
            "contract": "ERC721",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:23"
          },
          {
            "contract": "ERC721",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:26"
          },
          {
            "contract": "ERC721",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:29"
          },
          {
            "contract": "ERC721",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:32"
          },
          {
            "contract": "ERC721",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:35"
          },
          {
            "contract": "ERC721",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:38"
          },
          {
            "contract": "ERC721Enumerable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol:15"
          },
          {
            "contract": "ERC721Enumerable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol:18"
          },
          {
            "contract": "ERC721Enumerable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol:21"
          },
          {
            "contract": "ERC721Enumerable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol:24"
          },
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "EIP712Base",
            "label": "domainSeperator",
            "type": "t_bytes32",
            "src": "contracts/common/meta-transactions/EIP712Base.sol:24"
          },
          {
            "contract": "NativeMetaTransaction",
            "label": "nonces",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/common/meta-transactions/NativeMetaTransaction.sol:20"
          },
          {
            "contract": "Ownable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts/access/Ownable.sol:20"
          },
          {
            "contract": "ERC721Tradable",
            "label": "proxyRegistryAddress",
            "type": "t_address",
            "src": "contracts/common/ERC721Tradable.sol:32"
          },
          {
            "contract": "ERC721Tradable",
            "label": "_currentTokenId",
            "type": "t_uint256",
            "src": "contracts/common/ERC721Tradable.sol:33"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          }
        }
      }
    }
  }
}
